name: 'C++ CI'

on:
  push:
    branches:
      - main
      - feature/github_actions

permissions:
  contents: write

jobs:
  build_ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      
      - name: Configure with CMake
        run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      
      - name: Build project
        run: cmake --build .
      
      - name: Create package
        run: cmake --build . --target package

      - name: List files (Linux)
        run: ls -la

      - name: Rename package (Linux)
        run: |
          DEB_FILE=$(ls ./laba3-*.deb)
          if [ "$DEB_FILE" != "./laba3-0.0.${{ github.run_number }}-Linux.deb" ]; then
            mv "$DEB_FILE" ./laba3-0.0.${{ github.run_number }}-Linux.deb
          fi

      - name: Create Release (Ubuntu)
        id: create_release_ubuntu
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }} (Ubuntu)
          draft: false
          prerelease: false

      - name: Upload Release Asset (Ubuntu)
        id: upload_release_asset_ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_ubuntu.outputs.upload_url }}
          asset_path: ./laba3-0.0.${{ github.run_number }}-Linux.deb
          asset_name: laba3-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package


  build_macos:
    runs-on: macos-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      
      - name: Install CMake with productbuild support
        run: brew install cmake

      - name: Configure with CMake
        run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      
      - name: Build project
        run: cmake --build .

      - name: Create package
        run: cmake --build . --target package

      - name: List files (macOS)  # Добавляем шаг для вывода файлов
        run: ls -la

      - name: Verify .pkg file existence
        run: |
          echo "Listing files in the build directory:"
          ls -la ./  # Печатаем все файлы, чтобы проверить их наличие
          
          if [ ! -f ./laba3-0.0.${{ github.run_number }}-macos.pkg ]; then
            echo "Error: .pkg file not found!" >&2
            exit 1
          fi

      - name: Create Release (macOS)
        id: create_release_macos
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }} (macOS)
          draft: false
          prerelease: false

      - name: Upload Release Asset (macOS)
        id: upload_release_asset_macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_macos.outputs.upload_url }}
          asset_path: ./laba3-0.0.${{ github.run_number }}-macos.pkg
          asset_name: laba3-0.0.${{ github.run_number }}-macos.pkg
          asset_content_type: application/x-apple-installer-package
